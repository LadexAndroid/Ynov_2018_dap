package fr.ynov.dap.dap.data;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 *
 * @author David_tepoche
 *
 */
@Entity
public class AppUser {
    /**
     * the primary key.
     */
    @Id
    @GeneratedValue
    private Integer id;

    /**
     * the general account name.
     */
    @Column
    private String userKey;

    /**
     * Stock google accounts for an user.
     *
     * @JsonManagedReference is for avoid jackson mapper to create an infinity loop.
     */
    @JsonManagedReference
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "owner")
    private List<GoogleAccount> gAccounts;

    /**
     * Stock microsoft accounts for an user.
     *
     * @JsonManagedReference is for avoid jackson mapper to create an infinity loop.
     */
    @JsonManagedReference
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "owner")
    private List<MicrosoftAccount> mAccounts;

    /**
     * @return the gAccounts
     */
    public List<GoogleAccount> getgAccounts() {
        return gAccounts;
    }

    /**
     * @return the mAccounts
     */
    public List<MicrosoftAccount> getmAccounts() {
        return mAccounts;
    }

    /**
     * @return the userKey
     */
    public String getUserKey() {
        return userKey;
    }

    /**
     * @param usrKey the userKey to set
     */
    public void setUserKey(final String usrKey) {
        this.userKey = usrKey;
    }

    /**
     * @return the id
     */
    public Integer getId() {
        return id;
    }

    /**
     * @param idAutoGenerated the id to set
     */
    public void setId(final Integer idAutoGenerated) {
        this.id = idAutoGenerated;
    }

    /**
     * save googleAccount and tje link between them.
     *
     * @param gAccount the google account that the userapp have
     */
    public void addGoogleAccount(final GoogleAccount gAccount) {
        gAccount.setOwner(this);
        this.gAccounts.add(gAccount);
    }

    /**
     * save microsftAccount and the link between them.
     *
     * @param micorsoftAccount the google account that the userapp have
     */
    public void addMicrosoftAccount(final MicrosoftAccount micorsoftAccount) {
        micorsoftAccount.setOwner(this);
        this.mAccounts.add(micorsoftAccount);
    }

}
